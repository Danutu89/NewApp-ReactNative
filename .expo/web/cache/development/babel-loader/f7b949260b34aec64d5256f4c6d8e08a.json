{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/danutu/Desktop/Projects/ReactNative/newapp/screens/Login.js\";\nimport * as React from 'react';\nimport { MonoText } from \"../components/StyledText\";\nimport axios from 'axios';\nimport jwt from 'react-native-pure-jwt';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nexport default function Login() {\n  var _React$useState = React.useState('Username'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      username = _React$useState2[0],\n      onUserChangeText = _React$useState2[1];\n\n  var _React$useState3 = React.useState('Password'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      onPasswordChangeText = _React$useState4[1];\n\n  function MakeLogin() {\n    var resp, token, data, key, element;\n    return _regeneratorRuntime.async(function MakeLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('http://192.168.1.4:5000/api/login', {\n              auth: {\n                username: username,\n                password: password\n              }\n            }).then(function (resp) {\n              console.log(resp);\n              return resp;\n            }));\n\n          case 2:\n            resp = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(resp.data['login']);\n\n          case 5:\n            token = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(jwt.decode(token, \"mRo48tU4ebP6jIshqaoNf2HAnesrCGHm\").then(function (t) {\n              return t;\n            }));\n\n          case 8:\n            data = _context.sent;\n\n            for (key in data) {\n              if (object.hasOwnProperty(key)) {\n                element = object[key];\n                AsyncStorage.setItem(key, element);\n              }\n            }\n\n            ;\n            console.log(token);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.img,\n    source: require(\"../assets/images/logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.logoText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"NewApp\")), React.createElement(TextInput, {\n    value: username,\n    onChangeText: function onChangeText(text) {\n      return onUserChangeText(text);\n    },\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return onPasswordChangeText(text);\n    },\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    title: \"Login\",\n    style: styles.button,\n    onPress: function onPress() {\n      return MakeLogin();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Login\"))));\n}\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    backgroundColor: '#efefef',\n    borderWidth: 0,\n    marginTop: 10,\n    borderRadius: 40,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  container: {\n    padding: 20,\n    marginTop: 100,\n    alignContent: \"center\",\n    justifyContent: 'center',\n    flex: 1,\n    flexDirection: 'column'\n  },\n  logo: {\n    alignSelf: 'center',\n    marginBottom: 70\n  },\n  img: {\n    height: 160,\n    width: 140,\n    resizeMode: 'stretch'\n  },\n  logoText: {\n    fontSize: 30,\n    textAlign: \"center\",\n    fontWeight: \"200\",\n    marginTop: 10\n  },\n  login: {\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  button: {\n    backgroundColor: \"#007aff\",\n    padding: 8,\n    borderRadius: 30,\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/danutu/Desktop/Projects/ReactNative/newapp/screens/Login.js"],"names":["React","MonoText","axios","jwt","Login","useState","username","onUserChangeText","password","onPasswordChangeText","MakeLogin","get","auth","then","resp","console","log","data","token","decode","t","key","object","hasOwnProperty","element","AsyncStorage","setItem","styles","container","logo","img","require","logoText","text","input","login","button","color","StyleSheet","create","height","backgroundColor","borderWidth","marginTop","borderRadius","paddingLeft","paddingRight","padding","alignContent","justifyContent","flex","flexDirection","alignSelf","marginBottom","width","resizeMode","fontSize","textAlign","fontWeight","alignItems"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { MonoText } from '../components/StyledText';\nimport axios from 'axios';\nimport jwt from 'react-native-pure-jwt';\nimport { TextInput, StyleSheet, View, Image, Text, TouchableOpacity } from 'react-native';\n\nexport default function Login(){\n    const [username, onUserChangeText] = React.useState('Username');\n    const [password, onPasswordChangeText] = React.useState('Password');\n\n    async function MakeLogin(){\n        const resp = await axios.get('http://192.168.1.4:5000/api/login', {\n            auth: {\n                username: username,\n                password: password\n            }\n        }).then((resp)=>{\n            console.log(resp);\n            return resp;\n        });\n        let token = await resp.data['login'];\n        let data = await jwt.decode(token, \"mRo48tU4ebP6jIshqaoNf2HAnesrCGHm\").then((t)=>{return t;});\n        for (const key in data) {\n            if (object.hasOwnProperty(key)) {\n                const element = object[key];\n                AsyncStorage.setItem(key, element);\n            }\n        };\n        console.log(token);\n        \n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.logo}>\n                <Image style={styles.img} source={require('../assets/images/logo.png')}/>\n                <Text style={styles.logoText}>NewApp</Text>\n            </View>\n            <TextInput value={username} onChangeText={text => onUserChangeText(text)} style={styles.input}/>\n            <TextInput value={password} onChangeText={text => onPasswordChangeText(text)} style={styles.input}/>\n            <View style={styles.login}>\n                <TouchableOpacity title=\"Login\" style={styles.button} onPress={() => MakeLogin()}>\n                    <Text style={{color: 'white'}}>Login</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    input: {\n        height: 40,\n        backgroundColor: '#efefef',\n        borderWidth: 0,\n        marginTop: 10,\n        borderRadius: 40,\n        paddingLeft: 10,\n        paddingRight: 10\n    },\n    container: {\n        padding: 20,\n        marginTop: 100,\n        alignContent: \"center\",\n        justifyContent: 'center',\n        flex: 1,\n        flexDirection: 'column'\n    },\n    logo: {\n        alignSelf: 'center',\n        marginBottom: 70\n    },\n    img: {\n        height: 160,\n        width: 140,\n        resizeMode: 'stretch'\n    },\n    logoText: {\n        fontSize: 30,\n        textAlign: \"center\",\n        fontWeight: \"200\",\n        marginTop: 10\n    },\n    login: {\n        flex: 1,\n        justifyContent: 'flex-end',\n    },\n    button: {\n        backgroundColor: \"#007aff\",\n        padding: 8,\n        borderRadius: 30,\n        alignItems: \"center\",\n    }\n});"]},"metadata":{},"sourceType":"module"}